---
- name: 本家のWikiページの一覧を取得
  ansible.builtin.uri:
    url: https://www.redmine.org/projects/redmine/wiki/index.json
  register: api_result
- name: REST APIに関するWikiページの一覧だけを抽出し変数に代入
  ansible.builtin.set_fact:
    wiki_pages: "{{ api_result.json.wiki_pages | selectattr('title', 'contains', 'Rest_') | rejectattr('title', 'contains', '_api_') | list }}"
- name: ドキュメントディレクトリを作成
  ansible.builtin.file:
    path: "{{ document_rest_api_doc_dir }}"
    state: directory
    mode: "0755"
- name: 一時ディレクトリのパスを変数に代入
  ansible.builtin.set_fact:
    document_rest_api_tmp_dir: /tmp/{{ document_rest_api_doc_dir | basename }}
    # document_rest_api_tmp_dir: "{{ document_rest_api_doc_dir }}"
- name: 各Wikiページのコンテンツを取得
  ansible.builtin.uri:
    url: https://www.redmine.org/projects/redmine/wiki/{{ item.title | urlencode }}.json
  loop: "{{ wiki_pages }}"
  loop_control:
    label: "{{ item.title }}"
  register: wiki_page_result
- name: REST APIのデータ部分を抽出し変数に代入
  ansible.builtin.set_fact:
    wiki_page_contents: "{{ wiki_page_result.results | map(attribute='json.wiki_page') | list }}"
- name: ドキュメントの一時出力用ディレクトリを作成
  ansible.builtin.file:
    path: "{{ document_rest_api_tmp_dir }}"
    state: directory
    mode: "0755"
- name: 本家から取得したREST APIのドキュメントをファイルを保存
  ansible.builtin.copy:
    content: |
      {% set wiki_content = item.text %}
      {% set wiki_content = wiki_content | regex_replace('\\r', '') %}
      {# 目次マクロを削除 #}
      {% set wiki_content = wiki_content | replace('{{>toc}}', '') %}
      {# Wikiページのリンク記法を変換 #}
      {% set wiki_content = wiki_content | regex_replace('\\[\\[(.+?)\\|(.+?)\\]\\]', '"\\2":\\1') %}
      {% set wiki_content = wiki_content | regex_replace('<pre><code class="(xml|json)">', '<pre>') %}
      {% set wiki_content = wiki_content | regex_replace('</code></pre>', '</pre>') %}
      {# インデントを使ったリストのネスト記法を変換 #}
      {% set wiki_content = wiki_content | regex_replace('^  \\*', '**', multiline=True) %}
      {% set wiki_content = wiki_content | regex_replace('\\n\\n\\*\\*', '\\n**', ) %}
      {# レスポンス部分のステータスコードの表記を修正 #}
      {% set wiki_content = wiki_content | regex_replace('^\\*\\* @(\\d{3}) ', '* @\\1 ', multiline=True) %}
      {# インデントを使ったソースコードブロックを変換 #}
      {% set wiki_content = wiki_content | regex_replace('^  (GET|POST|PUT|DELETE) (.+)', '<pre>\\n\\1 \\2\\n</pre>', multiline=True) %}
      {{ wiki_content }}
    dest: "{{ document_rest_api_tmp_dir }}/{{ item.title }}.textile"
    mode: "0644"
  loop: "{{ wiki_page_contents }}"
  loop_control:
    label: "{{ item.title }}"
- name: 変換対象のドキュメントファイルを抽出
  ansible.builtin.find:
    paths:
      - "{{ document_rest_api_tmp_dir }}"
    patterns:
      - "*.textile"
  register: find_result
- name: ドキュメントファイルの一覧を変数に代入
  ansible.builtin.set_fact:
    rest_api_doc_files: "{{ find_result.files | map(attribute='path') | map('basename') | list }}"
- name: Textile形式をMarkdown形式に変換
  ansible.builtin.shell:
    cmd: pandoc -s {{ document_rest_api_tmp_dir }}/{{ item }} -f textile -t commonmark_x
    chdir: "{{ document_rest_api_tmp_dir }}"
  register: rest_api_markdown_contents
  loop: "{{ rest_api_doc_files }}"
  loop_control:
    label: "{{ item }}"
- name: ドキュメントファイルを保存
  ansible.builtin.copy:
    content: |
      {% set wiki_content = item.stdout %}
      {% set wiki_content = wiki_content | regex_replace('^# Rest ', '# ', multiline=True) %}
      {% set wiki_content = wiki_content | regex_replace('\\[([a-zA-Z0-9 ]+)\\]\\{\\.underline\\}', '<u>\\1</u>') %}
      {{ wiki_content }}
    dest: "{{ document_rest_api_doc_dir }}/{{ out_file_name }}.md"
    mode: "0644"
  loop: "{{ rest_api_markdown_contents.results }}"
  vars:
    out_file_name: "{{ 'index' if rest_api_doc_files[loop_index][:-8] == 'Rest_api' else rest_api_doc_files[loop_index][5:-8] }}"
  loop_control:
    label: "{{ rest_api_doc_files[loop_index] }}"
    index_var: loop_index
